{"name": "test_max", "status": "broken", "statusDetails": {"message": "TypeError: TestClass.test_max() takes 0 positional arguments but 1 was given", "trace": "cls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x00000259E2B2D630>\nwhen = 'call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:262: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\nD:\\python\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:177: in pytest_runtest_call\n    raise e\nD:\\python\\lib\\site-packages\\_pytest\\runner.py:169: in pytest_runtest_call\n    item.runtest()\nD:\\python\\lib\\site-packages\\_pytest\\python.py:1788: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\nD:\\python\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nD:\\python\\lib\\site-packages\\pluggy\\manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npyfuncitem = <Function test_max>\n\n    @hookimpl(trylast=True)\n    def pytest_pyfunc_call(pyfuncitem: \"Function\") -> Optional[object]:\n        testfunction = pyfuncitem.obj\n        if is_async_function(testfunction):\n            async_warn_and_skip(pyfuncitem.nodeid)\n        funcargs = pyfuncitem.funcargs\n        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}\n>       result = testfunction(**testargs)\nE       TypeError: TestClass.test_max() takes 0 positional arguments but 1 was given\n\nD:\\python\\lib\\site-packages\\_pytest\\python.py:194: TypeError"}, "start": 1687939685985, "stop": 1687939685985, "uuid": "74b1921c-ca0b-434d-b2ca-43fb76bd8eff", "historyId": "bf6271838e4436397567140827f69031", "testCaseId": "907349d9f28a9013df5a1d1057dffc60", "fullName": "src.max_test.TestClass#test_max", "labels": [{"name": "story", "value": "模拟测试用例失败"}, {"name": "feature", "value": "TestClass 测试类"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "src"}, {"name": "suite", "value": "max_test"}, {"name": "subSuite", "value": "TestClass"}, {"name": "host", "value": "DESKTOP-HO1Q1SV"}, {"name": "thread", "value": "16560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.max_test"}]}